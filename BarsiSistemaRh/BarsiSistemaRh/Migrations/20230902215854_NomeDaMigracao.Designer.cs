// <auto-generated />
using System;
using BarsiSistemaRh.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BarsiSistemaRh.Migrations
{
    [DbContext(typeof(FuncionarioContext))]
    [Migration("20230902215854_NomeDaMigracao")]
    partial class NomeDaMigracao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BarsiSistemaRh.Models.Departamento", b =>
                {
                    b.Property<long>("idDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("idDepartamento"));

                    b.Property<DateTime>("criacaoDepartamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("nomeDepartamento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idDepartamento");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("BarsiSistemaRh.Models.Funcionario", b =>
                {
                    b.Property<long>("idFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("idFuncionario"));

                    b.Property<int>("agenciaBancaria")
                        .HasColumnType("int");

                    b.Property<string>("bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("cargaHoraria")
                        .HasColumnType("time");

                    b.Property<int>("cargo")
                        .HasColumnType("int");

                    b.Property<string>("cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("codigoBanco")
                        .HasColumnType("int");

                    b.Property<string>("complemento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("contaBancaria")
                        .HasColumnType("int");

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("dataAdmissao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dataDemissao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("diasHomeOffice")
                        .HasColumnType("int");

                    b.Property<int>("diasTrabalhados")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("fgts")
                        .HasColumnType("float");

                    b.Property<TimeSpan>("horasExtras")
                        .HasColumnType("time");

                    b.Property<long>("idDepartamento")
                        .HasColumnType("bigint");

                    b.Property<double>("inss")
                        .HasColumnType("float");

                    b.Property<double>("irrs")
                        .HasColumnType("float");

                    b.Property<string>("logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nacionalidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeBanco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("salario")
                        .HasColumnType("float");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("valeAlimentacao")
                        .HasColumnType("float");

                    b.Property<double>("valeTransporte")
                        .HasColumnType("float");

                    b.HasKey("idFuncionario");

                    b.HasIndex("idDepartamento");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("BarsiSistemaRh.Models.Funcionario", b =>
                {
                    b.HasOne("BarsiSistemaRh.Models.Departamento", "departamento")
                        .WithMany("funcionarios")
                        .HasForeignKey("idDepartamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("departamento");
                });

            modelBuilder.Entity("BarsiSistemaRh.Models.Departamento", b =>
                {
                    b.Navigation("funcionarios");
                });
#pragma warning restore 612, 618
        }
    }
}
